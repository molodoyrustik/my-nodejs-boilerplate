{"version":3,"file":null,"sources":["../src/config/index.js","../src/middlewares/accessLogger.js","../src/middlewares/reqParser.js","../src/middlewares/catchError.js","../src/middlewares/reqLog.js","../src/middlewares/extendReqRes.js","../src/middlewares/index.js","../src/models/Domain/LogSchema.js","../src/models/Domain/DomainSchema.js","../src/models/Channel/ChannelSchema.js","../src/models/User/User.js","../src/models/Token/Token.js","../src/models/Domain/Domain.js","../src/models/Channel/Channel.js","../src/models/Rate/Rate.js","../src/models/index.js","../src/resourses/Auth/Auth.js","../src/resourses/Domain/Domain.js","../src/resourses/Account/Account.js","../src/resourses/Channel/Channel.js","../src/resourses/index.js","../src/api/auth/auth.js","../src/api/domain/domain.js","../src/api/channel/channel.js","../src/api/account/account.js","../src/api/api.js","../src/App.js","../src/index.js"],"sourcesContent":["global.__DEV__ = true;\n// __STAGE__\nglobal.__PROD__ = false;\n\nexport default {\n  name: 'Your super app',\n  port: 3001,\n  db: {\n    url: 'mongodb://localhost/test',\n  },\n  jwt: {\n    secret: 'YOUR_SECRET',\n  },\n  nodemailer: {\n    service: 'mail',\n    host: 'smtp.mail.ru',\n    auth: {\n      user: 'molodoyrustik@mail.ru',\n      pass: 'molodoy'\n    }\n  },\n};\n","import leftPad from 'left-pad';\n\nfunction levelFn(data) {\n  if (data.err || data.status >= 500 || data.duration > 10000) { // server internal error or error\n    return 'error';\n  } else if (data.status >= 400 || data.duration > 3000) { // client error\n    return 'warn';\n  }\n  return 'info';\n}\n\nfunction logStart(data) {\n  return `${leftPad(data.method, 4)} ${data.url} started reqId=${data.reqId}`;\n}\n\nfunction logFinish(data) {\n  const time = (data.duration || 0).toFixed(3);\n  const length = data.length || 0;\n  return `${leftPad(data.method, 4)} ${data.url} ${leftPad(data.status, 3)} ${leftPad(time, 7)}ms ${leftPad(length, 5)}b reqId=${data.reqId}`;\n}\n\nexport default (params) => ([\n  (req, res, next) => {\n    const data = {}\n    if (!req.log) throw 'has no req.log!'\n    const log = req.log.child({\n      component: 'req',\n    });\n\n    data.reqId = req.reqId\n    data.method = req.method\n    if (req.ws) data.method = 'WS'\n    data.host = req.headers.host\n    data.url = (req.baseUrl || '') + (req.url || '-')\n    data.referer = req.header('referer') || req.header('referrer')\n    data.ip = req.ip || req.connection.remoteAddress ||\n        (req.socket && req.socket.remoteAddress) ||\n        (req.socket.socket && req.socket.socket.remoteAddress) ||\n        '127.0.0.1'\n\n\n    if (__DEV__) {\n      log.debug(data, logStart(data));\n      if (req.body) {\n        log.trace(JSON.stringify(req.body));\n      }\n    }\n\n    const hrtime = process.hrtime();\n    function logging() {\n      data.status = res.statusCode\n      data.length = res.getHeader('Content-Length')\n\n      const diff = process.hrtime(hrtime);\n      data.duration = diff[0] * 1e3 + diff[1] * 1e-6\n\n      log[levelFn(data)](data, logFinish(data));\n    }\n    res.on('finish', logging);\n    res.on('close', logging);\n    next();\n  }\n])\n","import cookieParser from 'cookie-parser'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\n\nexport default (ctx) => ([\n  bodyParser.json(),\n  bodyParser.urlencoded({ extended: true }),\n  cookieParser(),\n  cors(),\n])\n","export default (ctx) => (\n  (err, req, res, next) => {\n    if(req && req.log && req.log.error){\n      req.log.error({\n        err,\n        query: req.query,\n        body: req.body,\n        headers: req.headers\n      }, (err || {}).stack)\n    } else {\n      console.log(err)\n    }\n    res.status(err.status || 500)\n    return res.json([]);\n    if (res.err) return res.err(err)\n    return res.json(err)\n  }\n)\n","import uuid from 'uuid'\n\nexport default (params) => ([\n  (req, res, next) => {\n    if (__PROD__) {\n      req.reqId = uuid.v4()\n    } else {\n      global.reqId = 1 + (global.reqId || 0)\n      req.reqId = global.reqId\n    }\n    if (params.log) {\n      req.log = params.log.child({\n        reqId: req.reqId,\n      });\n    }\n    next()\n  },\n])\n","import _ from 'lodash'\nexport default (ctx) => ([\n  (req, res, next) => {\n    if (ctx.requests) {\n      _.forEach(ctx.requests, (val, key) => {\n        req[key] = val.bind(req)\n      })\n      // if (req.allParams) {\n      //   req.params = req.allParams.bind(req)()\n      // }\n    }\n    if (ctx.responses) {\n      _.forEach(ctx.responses, (val, key) => {\n        res[key] = val.bind(res)\n      })\n    }\n    next()\n  }\n])\n","// fs\nimport accessLogger from './accessLogger'\nimport reqParser from './reqParser'\nimport catchError from './catchError'\nimport reqLog from './reqLog'\nimport extendReqRes from './extendReqRes'\n\nexport default function (ctx) {\n  return {\n    accessLogger: accessLogger(...arguments),\n    reqParser: reqParser(...arguments),\n    catchError: catchError(...arguments),\n    reqLog: reqLog(...arguments),\n    extendReqRes: extendReqRes(...arguments),\n  }\n}\n","import mongoose from 'mongoose'\r\n\r\nconst LogSchema = new mongoose.Schema({\r\n  id: {\r\n    type: String,\r\n    trim: true,\r\n  },\r\n  successRequests: [],\r\n  errorRequests: [],\r\n})\r\n\r\nexport default LogSchema\r\n","import _ from 'lodash'\r\nimport mongoose from 'mongoose'\r\n\r\nimport LogSchema from './LogSchema';\r\n\r\nconst DomainSchema = new mongoose.Schema({\r\n  id: {\r\n    type: String,\r\n    trim: true,\r\n  },\r\n  url: {\r\n    type: String,\r\n    trim: true,\r\n  },\r\n  channels: [],\r\n  logs: [LogSchema],\r\n})\r\n\r\nexport default DomainSchema\r\n","import _ from 'lodash'\r\nimport mongoose from 'mongoose'\r\n\r\nconst ChannelSchema = new mongoose.Schema({\r\n  id: {\r\n    type: String,\r\n    trim: true,\r\n  },\r\n  type: {\r\n    type: String,\r\n    trim: true,\r\n  },\r\n  endpoint: {\r\n    type: String,\r\n    trim: true,\r\n  }\r\n})\r\n\r\nexport default ChannelSchema;\r\n","import _ from 'lodash'\nimport jwt from 'jsonwebtoken'\nimport bcrypt from 'bcryptjs'\nimport Promise from 'bluebird'\nconst bcryptGenSalt = Promise.promisify(bcrypt.genSalt)\nconst bcryptHash = Promise.promisify(bcrypt.hash)\nconst bcryptCompare = Promise.promisify(bcrypt.compare)\nimport mongoose from 'mongoose'\nimport uniqid from 'uniqid';\n\nimport DomainSchema from '../Domain/DomainSchema';\nimport ChannelSchema from '../Channel/ChannelSchema';\n\nexport default (ctx) => {\n  if (!ctx.log) throw '!log'\n\n  const schema = new mongoose.Schema({\n    email: {\n      type: String,\n      required: true,\n      trim: true,\n    },\n    id: {\n      type: String,\n      trim: true,\n    },\n    password: {\n      type: String,\n    },\n    domains: [DomainSchema],\n    channels: [ChannelSchema],\n  }, {\n    collection: 'user',\n    timestamps: true,\n  })\n\n  schema.statics.isValidEmail = function (email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email)\n  }\n  schema.statics.generatePassword = function (length = 10) {\n    return Math.random().toString(36).substr(2, length)\n  }\n  schema.methods.toJSON = function () {\n    return _.omit(this.toObject(), ['password'])\n  }\n  schema.methods.getIdentity = function (params) {\n    const object = _.pick(this.toObject(), ['_id', 'email', 'id'])\n    if (!params) return object\n    return Object.assign(object, params)\n  }\n  schema.methods.generateAuthToken = function (params) {\n    return jwt.sign(this.getIdentity(params), ctx.config.jwt.secret)\n  }\n  schema.methods.verifyPassword = async function (password) {\n    return await bcryptCompare(password, this.password)\n  }\n\n  const SALT_WORK_FACTOR = 10\n  schema.pre('save', function (next) {\n    if (!this.isModified('password')) return next();\n    return bcryptGenSalt(SALT_WORK_FACTOR)\n    .then(salt => {\n      bcryptHash(this.password, salt)\n      .then(hash => {\n        this.password = hash\n        next();\n      })\n    })\n    .catch(next)\n  });\n\n  return mongoose.model('User', schema);\n}\n","import _ from 'lodash'\r\nimport jwt from 'jsonwebtoken'\r\nimport bcrypt from 'bcryptjs'\r\nimport Promise from 'bluebird'\r\nconst bcryptGenSalt = Promise.promisify(bcrypt.genSalt)\r\nconst bcryptHash = Promise.promisify(bcrypt.hash)\r\nconst bcryptCompare = Promise.promisify(bcrypt.compare)\r\nimport mongoose from 'mongoose'\r\n\r\nexport default (ctx) => {\r\n  if (!ctx.log) throw '!log'\r\n\r\n  const schema = new mongoose.Schema({\r\n    id: {\r\n      type: String,\r\n      trim: true,\r\n    },\r\n    userID: {\r\n      type: String,\r\n      trim: true,\r\n    },\r\n    forgotEmailToken: {\r\n      type: String,\r\n      trim: true,\r\n    },\r\n  }, {\r\n    collection: 'token',\r\n    timestamps: true,\r\n  })\r\n\r\n  return mongoose.model('Token', schema);\r\n}\r\n","import mongoose from 'mongoose'\r\nimport DomainSchema from './DomainSchema';\r\n\r\nexport default (ctx) => {\r\n  if (!ctx.log) throw '!log'\r\n\r\n  return  mongoose.model('Domain', DomainSchema);\r\n}\r\n","import mongoose from 'mongoose'\r\nimport ChannelSchema from './ChannelSchema';\r\n\r\nexport default (ctx) => {\r\n  if (!ctx.log) throw '!log'\r\n\r\n  return  mongoose.model('Channel', ChannelSchema);\r\n}\r\n","import _ from 'lodash'\r\nimport uniqid from 'uniqid';\r\nimport mongoose from 'mongoose';\r\n\r\n\r\nexport default (ctx) => {\r\n  if (!ctx.log) throw '!log'\r\n\r\n  const schema = new mongoose.Schema({\r\n    id: {\r\n      type: String,\r\n      trim: true,\r\n    },\r\n    name: {\r\n      type: String,\r\n      trim: true,\r\n    },\r\n    maxDomains: {\r\n      type: Number,\r\n    },\r\n    maxChannels: {\r\n      type: Number,\r\n    },\r\n  }, {\r\n    collection: 'rate',\r\n    timestamps: true,\r\n  })\r\n\r\n  return  mongoose.model('Rate', schema);\r\n}\r\n","import User from './User/User';\nimport Token from './Token/Token';\nimport DomainSchema from './Domain/DomainSchema';\nimport Domain from './Domain/Domain';\nimport Channel from './Channel/Channel';\nimport Rate from './Rate/Rate';\n\nexport default function () {\n  return {\n    Domain: Domain(...arguments),\n    Rate: Rate(...arguments),\n    User: User(...arguments),\n    Token: Token(...arguments),\n    Channel: Channel(...arguments),\n    scheme: {\n      DomainSchema,\n    }\n  }\n}\n","import jwt from 'express-jwt'\nimport uniqid from 'uniqid';\nimport crypto from 'crypto';\nimport mongoose from 'mongoose';\n\nexport function canonize(str) {\n  return str.toLowerCase().trim()\n}\n\nexport default (ctx) => {\n  const User = ctx.models.User;\n  const Token = ctx.models.Token;\n  const Domain = ctx.models.Domain;\n  const transporter = ctx.transporter;\n\n  const resourse = {}\n\n  resourse.validate = async function (req, res) {\n    if(req.user) {\n      const user = await User.findOne({id: req.user.id})\n      if (!user) return res.status(404).json([{validate: false, message: 'Пользователь не найден в базе'}]);\n      return [{\n        validate: true,\n        __pack: 1,\n        jwt: req.user,\n        user: user,\n      }]\n    }\n    return res.status(404).json([{validate: false, message: 'Пользователь не найден в базе'}]);\n  }\n\n  resourse.getUserFields = function (req) {\n    return req.body;\n  }\n\n  resourse.validationUserFields = function(userFields, res) {\n    let valid = {\n      isValid: false,\n      message: []\n    }\n\n    if(!userFields.captcha) {\n      valid.isValid = true;\n      valid.message = [{signup: false, message: 'Параметр captcha не передан или введен неверно'}]\n    }\n\n    if(!userFields.email || !userFields.password) {\n      valid.isValid = true;\n      valid.message = [{signup: false, message: 'Параметрs email или password не передан'}]\n    }\n\n    return valid;\n  }\n\n  resourse.getUserCriteria = function (req, res) {\n    const params = req.body\n    if (params.email) {\n      return {\n        email: params.email,\n      }\n    }\n    return res.status(400).json([{signup: false, message: 'Параметр email не передан'}]);\n  }\n\n  resourse.signup = async function (req, res) {\n    try {\n      const userFields = resourse.getUserFields(req, res);\n      const valid = resourse.validationUserFields(userFields, res);\n      if (valid.isValid) {\n        return res.status(400).json(valid.message);\n      }\n      const criteria = resourse.getUserCriteria(req, res);\n\n      const existUser = await User.findOne(criteria)\n      if (existUser) return res.status(400).json([{signup: false, message: 'Такой email зарегистрирован'}])\n\n      const user = new User({ ...userFields, id: uniqid()});\n      await user.save()\n\n      const userToken = new Token({ userID: user.id , id: uniqid(), forgotEmailToken: '' })\n      await userToken.save();\n\n      const result = [{\n        signup: true,\n        user,\n        token: user.generateAuthToken(),\n      }]\n\n      return res.json(result)\n\n    } catch(err) {\n      console.log(err);\n      return res.status(500).json(err)\n    }\n  }\n\n  resourse.login = async function (req, res) {\n    const params = resourse.getUserFields(req, res);\n    if (!params.password) return res.status(400).json([{login: false, message: 'Параметр password не передан'}]);\n\n    const criteria = resourse.getUserCriteria(req);\n    const user = await User.findOne(criteria);\n\n    if (!user) return res.status(404).json([{login: false, message: 'Такой пользователь не найден'}]);\n    await user.save();\n\n    if (!await user.verifyPassword(params.password)) {\n      return res.status(400).json([{login: false, message: 'Переданный пароль не подходит'}]);\n    }\n\n    return res.json([{\n      __pack: 1,\n      login: true,\n      user,\n      token: user.generateAuthToken(),\n    }])\n  }\n\n  resourse.forgot = async function (req, res) {\n    const params = resourse.getUserFields(req, res);\n\n    if (!params.email) return res.status(400).json([{ forgot: false, message: 'Параметр email не передан' }]);\n    if (!params.captcha) return res.status(400).json([{ forgot: false, message: 'Параметр captcha не передан' }]);\n\n    const criteria = resourse.getUserCriteria(req);\n    const user = await User.findOne(criteria);\n\n    if (!user) return res.status(404).json([{login: false, message: 'Пользователь с таким email не найден в базе'}]);\n\n    const token = await crypto.randomBytes(32);\n    const userToken = await Token.findOne({userID: user.id})\n    userToken.forgotEmailToken = token.toString('hex');\n    await userToken.save();\n\n\n    let mailText = `Перейдите по ссылке чтобы изменить пароль http://localhost:3000/auth/forgot/${userToken.forgotEmailToken}`;\n\n    var mailOptions = {\n      from: 'molodoyrustik@mail.ru',\n      to: user.email,\n      subject: 'Восстановления пароля сайта Ashile.io',\n      text: mailText\n    };\n    await transporter.sendMail(mailOptions);\n\n    const result = [{\n      __pack: 1,\n      forgot: true\n    }];\n    return res.json(result);\n  }\n\n  resourse.checkForgotToken = async function (req, res) {\n    const { forgotEmailToken } = req.params;\n    if (!forgotEmailToken) {\n      return res.status(400).json([{checkForgotToken: false, message: 'Токен не был передан'}]);\n    }\n\n    const criteria = { forgotEmailToken };\n    const userToken = await Token.findOne(criteria);\n\n    if (!userToken) return res.status(404).json([{checkForgotToken: false, message: 'Пользователь с таким токеном не найден'}]);\n\n    return res.json([{\n        __pack: 1,\n        checkForgotToken: true\n    }]);\n  }\n\n  resourse.reset = async function (req, res) {\n    const params = resourse.getUserFields(req, res);\n    const { password, checkPassword, captcha, forgotEmailToken, } = params;\n\n    if (!password) return res.status(400).json([{reset: false, message: 'Параметр password не передан'}]);\n    if (!checkPassword) return res.status(400).json([{reset: false, message: 'Параметр checkPassword не передан'}]);\n    if (password !== checkPassword) return res.status(400).json([{reset: false, message: 'Пароли не совпадают'}]);\n    if (!captcha) return res.status(400).json([{reset: false, message: 'Параметр captcha не передан'}]);\n    if (!forgotEmailToken) return res.status(400).json([{reset: false, message: 'Параметр forgotEmailToken не передан'}]);\n\n    const criteria = { forgotEmailToken };\n    const userToken = await Token.findOne(criteria);\n    if (!userToken) return res.status(404).json([{reset: false, message: 'Не корректный токен'}]);\n    const { userID } = userToken;\n    userToken.forgotEmailToken = '';\n    await userToken.save();\n\n    const user = await User.findOne({id: userID});\n    if (!user) return res.status(404).json([{reset: false, message: 'Такой пользователь не найден'}]);\n    user.password = password;\n    await user.save();\n\n    return res.json([{\n      __pack: 1,\n      reset: true\n    }])\n  }\n\n  resourse.getToken = function (req) {\n    if (req.headers.authorization && req.headers.authorization.split( ' ' )[ 0 ] === 'Bearer') {\n      return req.headers.authorization.split( ' ' )[ 1 ]\n    } else if (req.headers['x-access-token']) {\n      return req.headers['x-access-token'];\n    } else if ( req.query && req.query.token ) {\n      return req.query.token\n    } else if ( req.cookies && req.cookies.token  ) {\n      return req.cookies.token\n    }\n    if (__DEV__ && ctx.config && ctx.config.jwt && ctx.config.jwt.devToken) return ctx.config.jwt.devToken\n    return null;\n  }\n\n  resourse.parseToken = function (req, res, next) {\n    const token = resourse.getToken(req)\n    req.token = token\n    next()\n  }\n\n  resourse.parseUser = function (req, res, next) {\n    const options = {\n      secret: ctx.config && ctx.config.jwt.secret || 'SECRET',\n      getToken: req => req.token,\n    }\n    jwt(options)(req, res, (err) => {\n      if (err) req._errJwt = err\n      next()\n    })\n  }\n\n  resourse.isAuth = function (req, res, next) {\n    if (req._errJwt) return next(req._errJwt)\n    if (!req.user || !req.user._id) return res.status(401).send('!req.user')\n    next()\n  }\n\n  return resourse\n}\n","import jwt from 'express-jwt'\r\nimport uniqid from 'uniqid';\r\n\r\n\r\nexport default (ctx) => {\r\n  const User = ctx.models.User;\r\n  const Domain = ctx.models.Domain;\r\n\r\n  let resourse = {};\r\n\r\n  resourse.domains = async function(req, res) {\r\n    const userID = req.user.id;\r\n    const user = await User.findOne({id: userID});\r\n\r\n    return res.json(user.domains);\r\n  }\r\n\r\n  resourse.create = async function(req, res) {\r\n    const params = req.body\r\n    if (!params.url) {\r\n      return res.status(400).json([{signup: false, message: 'Домен не передан'}]);\r\n    }\r\n    if (!params.channels) {\r\n      return res.status(400).json([{signup: false, message: 'Домен не передан'}]);\r\n    }\r\n    const { url, channels } = params;\r\n\r\n    const userID = req.user.id;\r\n    const user = await User.findOne({id: userID});\r\n    const domain = new Domain({ url, id: uniqid(), channels})\r\n    user.domains.push(domain);\r\n    await user.save();\r\n\r\n    return res.json([{ flag: true, message: 'Домен успешно добавлен'}]);\r\n  }\r\n\r\n  resourse.edit = async function(req, res) {\r\n    const params = req.body\r\n    if (!params.url) {\r\n      return res.status(400).json([{signup: false, message: 'Домен не передан'}]);\r\n    }\r\n    if (!params.id) {\r\n      return res.status(400).json([{signup: false, message: 'Id домена не передан'}]);\r\n    }\r\n    const { url, id } = params;\r\n\r\n    const userID = req.user.id;\r\n    const user = await User.findOne({id: userID});\r\n    user.domains.find((domain) => { return domain.id === id }).url = url;\r\n    await user.save();\r\n\r\n    return res.json([{ flag: true, message: 'Домен успешно изменен'}]);\r\n  }\r\n\r\n  resourse.delete = async function(req, res) {\r\n\r\n    if (!req.params.id) {\r\n      return res.status(400).json([{signup: false, message: 'Id домена не передан'}]);\r\n    }\r\n    const { id } = req.params;\r\n\r\n    const userID = req.user.id;\r\n    const user = await User.findOne({id: userID});\r\n    user.domains = user.domains.filter((domain)=>{ return domain.id != id });\r\n    await user.save();\r\n\r\n    return res.json([{ flag: true, message: 'Домен успешно удален'}]);\r\n  }\r\n\r\n  resourse.logs = async function(req, res) {\r\n    if (!req.params.domainId) {\r\n      return res.status(400).json([{signup: false, message: 'Id домена не передан'}]);\r\n    }\r\n    const { domainId } = req.params;\r\n    const userID = req.user.id;\r\n\r\n    const user = await User.findOne({id: userID});\r\n    if (!user) {\r\n      return res.status(400).json([{signup: false, message: 'Пользователь не найден'}]);\r\n    }\r\n    const domain = user.domains.find((domain) => (domain.id === domainId));\r\n    const { logs } = domain;\r\n\r\n    return res.json([{ flag: true, logs }]);\r\n  }\r\n\r\n  return resourse\r\n}\r\n","export default (ctx) => {\r\n  const User = ctx.models.User;\r\n  const Domain = ctx.models.Domain;\r\n\r\n  let resourse = {};\r\n\r\n  resourse.changePassword = async function(req, res) {\r\n    const { password, repeatPassword } = req.body;\r\n    if (!password || !repeatPassword) return res.status(404).json([{flag: false, message: \"Вы не передали все данные\"}])\r\n    if (password !== repeatPassword) return res.status(404).json([{flag: false, message: \"Пароли не совпадают\"}])\r\n    const userID = req.user.id;\r\n    const user = await User.findOne({id: userID});\r\n    user.password = password;\r\n    await user.save();\r\n\r\n    return res.json([{flag: true, message: 'Пароль успешно изменен'}]);\r\n  }\r\n\r\n  resourse.channels = async function(req, res) {\r\n    const userID = req.user.id;\r\n    const user = await User.findOne({id: userID});\r\n    if (!user) return res.status(404).json([{flag: false, message: \"Пользователь не найден\"}])\r\n    return res.json(user.channels);\r\n  }\r\n\r\n  return resourse\r\n}\r\n","import jwt from 'express-jwt'\r\nimport uniqid from 'uniqid';\r\n\r\n\r\nexport default (ctx) => {\r\n  const User = ctx.models.User;\r\n  const Channel = ctx.models.Channel;\r\n\r\n  let controller = {};\r\n\r\n  controller.getChannels = async function(req, res) {\r\n    const userID = req.user.id;\r\n    const user = await User.findOne({id: userID});\r\n\r\n    return res.json(user.channels);\r\n  }\r\n\r\n  controller.create = async function(req, res) {\r\n    const params = req.body;\r\n\r\n    if (!params.type) {\r\n      return res.status(400).json([{flag: false, message: 'type не передан'}]);\r\n    }\r\n    if (!params.endpoint) {\r\n      return res.status(400).json([{flag: false, message: 'endpoint не передан'}]);\r\n    }\r\n    const { type, endpoint } = params;\r\n\r\n    const userID = req.user.id;\r\n    const user = await User.findOne({id: userID});\r\n    const channel = new Channel({ id: uniqid(), type, endpoint })\r\n    user.channels.push(channel);\r\n    await user.save();\r\n\r\n    return res.json([{ flag: true, message: 'Channel успешно добавлен'}]);\r\n  }\r\n\r\n  controller.edit = async function(req, res) {\r\n    const params = req.body;\r\n\r\n    if (!params.type) {\r\n      return res.status(400).json([{flag: false, message: 'type не передан'}]);\r\n    }\r\n    if (!params.endpoint) {\r\n      return res.status(400).json([{flag: false, message: 'endpoint не передан'}]);\r\n    }\r\n    const { type, endpoint } = params;\r\n\r\n    const userID = req.user.id;\r\n    const user = await User.findOne({id: userID});\r\n    channel = user.channels.find((channel) => { return channel.id === id })\r\n    channel.type = type;\r\n    channel.endpoint = endpoint;\r\n    await user.save();\r\n\r\n    return res.json([{ flag: true, message: 'Канал успешно изменен'}]);\r\n  }\r\n\r\n  controller.delete = async function(req, res) {\r\n\r\n    if (!req.params.id) {\r\n      return res.status(400).json([{flag: false, message: 'Id канала не передан'}]);\r\n    }\r\n    const { id } = req.params;\r\n\r\n    const userID = req.user.id;\r\n    const user = await User.findOne({id: userID});\r\n    user.channels = user.channels.filter((channel)=>{ return channel.id != id });\r\n    await user.save();\r\n\r\n    return res.json([{ flag: true, message: 'Канал успешно удален'}]);\r\n  }\r\n\r\n\r\n\r\n  return controller\r\n}\r\n","import Auth from './Auth/Auth';\nimport Domain from './Domain/Domain';\nimport Account from './Account/Account';\nimport Channel from './Channel/Channel';\n\nexport default function () {\n  return {\n    Auth: Auth(...arguments),\n    Domain: Domain(...arguments),\n    Account: Account(...arguments),\n    Channel: Channel(...arguments),\n  }\n}\n","import _ from 'lodash';\nimport mongoose from 'mongoose';\nimport { AsyncRouter } from 'express-async-router';\nimport Auth from '../../resourses/Auth/Auth';\n\n\nexport default (ctx) => {\n  if (!_.has(ctx, 'resourses.Auth.signup')) throw '!resourses.Auth.signup'\n  if (!_.has(ctx, 'resourses.Auth.login')) throw '!resourses.Auth.login'\n  if (!_.has(ctx, 'resourses.Auth.validate')) throw '!resourses.Auth.validate'\n  if (!_.has(ctx, 'resourses.Auth.forgot')) throw '!resourses.Auth.forgot'\n  if (!_.has(ctx, 'resourses.Auth.checkForgotToken')) throw '!resourses.Auth.checkForgotToken'\n  if (!_.has(ctx, 'resourses.Auth.reset')) throw '!resourses.Auth.reset'\n\tconst api = AsyncRouter();\n\n  api.all('/validate', ctx.resourses.Auth.validate);\n  api.post('/signup', ctx.resourses.Auth.signup);\n  api.post('/login', ctx.resourses.Auth.login);\n  api.post('/forgot', ctx.resourses.Auth.forgot);\n  api.get('/forgot/:forgotEmailToken', ctx.resourses.Auth.checkForgotToken);\n  api.post('/reset', ctx.resourses.Auth.reset);\n\n\n\treturn api;\n}\n","import _ from 'lodash';\r\nimport mongoose from 'mongoose';\r\nimport { AsyncRouter } from 'express-async-router';\r\nimport Domain from '../../resourses/Domain/Domain';\r\n\r\n\r\nexport default (ctx) => {\r\n  if (!_.has(ctx, 'resourses.Domain.domains')) throw '!resourses.Domain.domains'\r\n  if (!_.has(ctx, 'resourses.Domain.create')) throw '!resourses.Domain.create'\r\n  if (!_.has(ctx, 'resourses.Domain.delete')) throw '!resourses.Domain.delete'\r\n  if (!_.has(ctx, 'resourses.Domain.edit')) throw '!resourses.Domain.edit'\r\n  if (!_.has(ctx, 'resourses.Domain.edit')) throw '!resourses.Domain.logs'\r\n\r\n\tconst api = AsyncRouter();\r\n\r\n  api.get('/', ctx.resourses.Domain.domains);\r\n  api.post('/create', ctx.resourses.Domain.create);\r\n  api.delete('/delete/:id', ctx.resourses.Domain.delete);\r\n  api.put('/edit', ctx.resourses.Domain.edit);\r\n  api.get('/:domainId/logs', ctx.resourses.Domain.logs);\r\n\r\n\treturn api;\r\n}\r\n","import _ from 'lodash';\r\nimport mongoose from 'mongoose';\r\nimport { AsyncRouter } from 'express-async-router';\r\nimport Channel from '../../resourses/Channel/Channel';\r\n\r\n\r\nexport default (ctx) => {\r\n  if (!_.has(ctx, 'resourses.Channel.getChannels')) throw '!resourses.Channel.getChannels'\r\n  if (!_.has(ctx, 'resourses.Channel.create')) throw '!resourses.Channel.create'\r\n\r\n\tconst api = AsyncRouter();\r\n\r\n  api.get('/', ctx.resourses.Channel.getChannels);\r\n  api.post('/create', ctx.resourses.Channel.create);\r\n  api.put('/edit', ctx.resourses.Channel.edit);\r\n  api.delete('/delete/:id', ctx.resourses.Channel.delete);\r\n\r\n\treturn api;\r\n}\r\n","import _ from 'lodash';\r\nimport mongoose from 'mongoose';\r\nimport { AsyncRouter } from 'express-async-router';\r\nimport Account from '../../resourses/Account/Account';\r\n\r\n\r\nexport default (ctx) => {\r\n  if (!_.has(ctx, 'resourses.Account.changePassword')) throw '!resourses.Account.changePassword';\r\n  if (!_.has(ctx, 'resourses.Account.channels')) throw '!resourses.Account.channels'\r\n\r\n\tconst api = AsyncRouter();\r\n\r\n  api.post('/changePassword', ctx.resourses.Account.changePassword);\r\n  api.get('/channels', ctx.resourses.Account.channels);\r\n\r\n\r\n\treturn api;\r\n}\r\n","import mongoose from 'mongoose';\nimport { AsyncRouter } from 'express-async-router';\nimport expressJwt from 'express-jwt';\nimport uniqid from 'uniqid';\nimport getAuth from './auth/auth';\nimport getDomain from './domain/domain';\nimport getChannel from './channel/channel';\nimport getAccount from './account/account';\n\nexport default (ctx) => {\n\tconst api = AsyncRouter();\n\n  api.all('/', () => ({ok: true, version: '1.0.1'}))\n\n  api.use('/auth', getAuth(ctx));\n\tapi.use('/domains', expressJwt({secret: ctx.config.jwt.secret}), getDomain(ctx));\n\tapi.use('/channels', expressJwt({secret: ctx.config.jwt.secret}), getChannel(ctx));\n\tapi.use('/account', expressJwt({secret: ctx.config.jwt.secret}), getAccount(ctx));\n\n\t// api.use('/domains',(function(err, req, res, next) {\n\t// \treturn res.status(401).json([{flag: false, message: 'Неправильный токен'}]);\n\t// }))\n\n\tapi.use('/', (err, req, res, next) => {\n\t\treturn res.status(401).json([{ flag: false, message: 'Не авторизован' }])\n\t})\n\n\treturn api;\n}\n","import bunyan from 'bunyan';\nimport express from 'express';\nimport mongoose from 'mongoose';\nimport nodemailer from 'nodemailer';\nimport smtpTransport from 'nodemailer-smtp-transport';\nimport getMiddlewares from './middlewares/index';\nimport getModels from './models/index';\nimport getResourses from './resourses/index';\nimport getApi from './api/api';\n\n\nexport default class App {\n  constructor(params = {}) {\n    Object.assign(this, params);\n    if (!this.log) this.log = this.getLogger();\n    this.init();\n  }\n\n  getLogger(params) {\n    return bunyan.createLogger(Object.assign({\n      name: 'app',\n      src: __DEV__,\n      level: 'trace',\n    }, params))\n  }\n\n  getMiddlewares() {\n    return getMiddlewares(this);\n  }\n  getModels() {\n    return getModels(this);\n  }\n  getDatabase() {\n    return {\n      run: () => {\n        new Promise((resolve) => {\n          mongoose.connect(this.config.db.url);\n          resolve();\n        });\n      }\n    }\n  }\n  getResourses() {\n    return getResourses(this);\n  }\n\n  init() {\n    this.log.trace('App init');\n    const transporter = nodemailer.createTransport(smtpTransport(this.config.nodemailer));\n    this.transporter = transporter;\n\n    this.app = express();\n    this.db = this.getDatabase();\n    this.middlewares = this.getMiddlewares();\n    this.log.trace('middlewares', Object.keys(this.middlewares));\n    this.models = this.getModels();\n    this.log.trace('models', Object.keys(this.models));\n    this.resourses = this.getResourses();\n    this.log.trace('resourses', Object.keys(this.resourses));\n\n    this.useMiddlewares();\n    this.useRoutes();\n    this.useDefaultRoute();\n  }\n\n  useMiddlewares() {\n    this.app.use(this.middlewares.catchError);\n    this.app.use(this.middlewares.reqLog);\n    this.app.use(this.middlewares.accessLogger);\n    this.app.use(this.middlewares.reqParser);\n    this.app.use(this.resourses.Auth.parseToken);\n    this.app.use(this.resourses.Auth.parseUser);\n  }\n  useRoutes() {\n    const api = getApi(this);\n    this.app.use('/api/v1', api);\n  }\n  useDefaultRoute() {\n    this.app.use((req, res, next) => {\n      const err = ('Route not found');\n      next(err);\n    });\n  }\n\n  async run() {\n    this.log.trace('App run');\n    try {\n      await this.db.run();\n    } catch (err) {\n      this.log.fatal(err);\n    }\n    return new Promise((resolve) => {\n      this.app.listen(this.config.port, () => {\n        this.log.info(`App \"${this.config.name}\" running on port ${this.config.port}!`);\n        resolve(this);\n      });\n    });\n  }\n}\n","import config from './config/index';\nimport App from './App';\n\nconst app = new App({ config });\napp.run();\n"],"names":["global","__DEV__","__PROD__","levelFn","data","err","status","duration","logStart","leftPad","method","url","reqId","logFinish","time","toFixed","length","params","req","res","next","log","child","ws","host","headers","baseUrl","referer","header","ip","connection","remoteAddress","socket","debug","body","trace","hrtime","process","logging","statusCode","getHeader","diff","on","ctx","bodyParser","json","urlencoded","extended","cookieParser","cors","error","query","stack","uuid","v4","requests","forEach","val","key","bind","responses","accessLogger","arguments","reqParser","catchError","reqLog","extendReqRes","LogSchema","mongoose","Schema","String","DomainSchema","ChannelSchema","bcryptGenSalt","Promise","promisify","bcrypt","genSalt","bcryptHash","hash","bcryptCompare","compare","schema","statics","isValidEmail","email","re","test","generatePassword","Math","random","toString","substr","methods","toJSON","_","omit","toObject","getIdentity","object","pick","generateAuthToken","jwt","sign","config","secret","verifyPassword","password","SALT_WORK_FACTOR","pre","isModified","then","salt","catch","model","Number","Domain","Rate","User","Token","Channel","models","transporter","resourse","validate","user","findOne","id","message","getUserFields","validationUserFields","userFields","valid","captcha","isValid","signup","getUserCriteria","criteria","existUser","uniqid","save","userID","forgotEmailToken","userToken","result","login","forgot","crypto","randomBytes","token","mailText","sendMail","mailOptions","checkForgotToken","reset","checkPassword","getToken","authorization","split","cookies","devToken","parseToken","parseUser","options","_errJwt","isAuth","_id","send","domains","create","channels","push","domain","flag","edit","find","delete","filter","logs","domainId","changePassword","repeatPassword","controller","getChannels","type","endpoint","channel","Auth","Account","has","api","AsyncRouter","all","resourses","post","get","put","ok","version","use","getAuth","expressJwt","getDomain","getChannel","getAccount","App","getLogger","init","bunyan","createLogger","getMiddlewares","getModels","resolve","connect","db","getResourses","nodemailer","createTransport","smtpTransport","app","express","getDatabase","middlewares","useMiddlewares","useRoutes","useDefaultRoute","getApi","run","fatal","listen","port","info","name"],"mappings":"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"}